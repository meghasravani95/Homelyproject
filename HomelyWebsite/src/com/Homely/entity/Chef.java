package com.Homely.entity;
// Generated Nov 11, 2020, 12:09:47 AM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Chef generated by hbm2java
 */
@Entity
@Table(name = "chef", catalog = "homely")
public class Chef implements java.io.Serializable {

	private int chefid;
	private String name;
	private String email;
	private int zipcode;
	private Set<Review> reviews = new HashSet<Review>(0);
	private Set<Dish> dishes = new HashSet<Dish>(0);

	public Chef() {
	}

	public Chef(int chefid, String name, String email, int zipcode) {
		this.chefid = chefid;
		this.name = name;
		this.email = email;
		this.zipcode = zipcode;
	}

	
	public Chef(int chefid, String name, String email, int zipcode, Set<Review> reviews, Set<Dish> dishes) {
		this.chefid = chefid;
		this.name = name;
		this.email = email;
		this.zipcode = zipcode;
		this.reviews = reviews;
		this.dishes = dishes;
	}

	@Id
	@Column(name = "chefid", unique = true, nullable = false)
	public int getChefid() {
		return this.chefid;
	}

	
	public void setChefid(int chefid) {
		this.chefid = chefid;
	}

	@Column(name = "name", nullable = false,length = 30)//, nullable = false
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email", nullable = false, length = 30) 
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "zipcode", nullable = false)
	public int getZipcode() {
		return this.zipcode;
	}

	public void setZipcode(int zipcode) {
		this.zipcode = zipcode;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chef")
	public Set<Review> getReviews() {
		return this.reviews;
	}

	public void setReviews(Set<Review> reviews) {
		this.reviews = reviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chef") //need to remove cascade
	public Set<Dish> getDishes() {
		return this.dishes;
	}

	public void setDishes(Set<Dish> dishes) {
		this.dishes = dishes;
	}

}
