package com.Homely.entity;
// Generated Nov 11, 2020, 12:09:47 AM by Hibernate Tools 5.2.12.Final

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * OrderdetailId generated by hbm2java
 */
@Embeddable
public class OrderdetailId implements java.io.Serializable {

	private int dishid;
	private int orderid;
	private int quantity;
	private float subtotal;

	public OrderdetailId() {
	}

	public OrderdetailId(int dishid, int orderid, int quantity, float subtotal) {
		this.dishid = dishid;
		this.orderid = orderid;
		this.quantity = quantity;
		this.subtotal = subtotal;
	}

	@Column(name = "dishid", nullable = false)
	public int getDishid() {
		return this.dishid;
	}

	public void setDishid(int dishid) {
		this.dishid = dishid;
	}

	@Column(name = "orderid", nullable = false)
	public int getOrderid() {
		return this.orderid;
	}

	public void setOrderid(int orderid) {
		this.orderid = orderid;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "subtotal", nullable = false, precision = 12, scale = 0)
	public float getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(float subtotal) {
		this.subtotal = subtotal;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof OrderdetailId))
			return false;
		OrderdetailId castOther = (OrderdetailId) other;

		return (this.getDishid() == castOther.getDishid()) && (this.getOrderid() == castOther.getOrderid())
				&& (this.getQuantity() == castOther.getQuantity()) && (this.getSubtotal() == castOther.getSubtotal());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getDishid();
		result = 37 * result + this.getOrderid();
		result = 37 * result + this.getQuantity();
		result = 37 * result + (int) this.getSubtotal();
		return result;
	}

}
